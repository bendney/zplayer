# Layout definitions for OpenMCU 2.2.3.43 by muggot

# All parameters except "font" could be local (inside single
# layout) and global (for everything below). To redefine global
# parameter close the layout descriptor first (by typing "[]").

# [LAYOUD_ID] opens new layout descriptor. You don't have to
# close them, just type [NEXT_LAYOUT_ID] and continue, except
# cases you want redefine something global: use [] - it will
# mean that layout has ended.

# (x,y) defines video position in the frame. Video positions
# have to be defined inside layout descriptors. It is
# possible to define up to 100 video positions for each
# layout.

# Use # and // for writing comments.

# Dividers are: "Enter" (0xA) or semicolon (;).


# Initial parameters (global):

# Logical width and height of main video frame. openmcu will
# scale them, so you may use everything you want:
frame_width=704
frame_height=576

# mode_mask - where layout will used:
# 0 - never used;
# 1 - non-moderated mode only;
# 2 - moderated mode only;
# 3 - used in both modes.
mode_mask=3

# 1-pixel border around video position (1=yes; 0=no):
border=1

# Non-moderated mode behavior:
# new_members_first = 1|0 - add new members from begin (1) or
# from end (0) of the the list (default 1):
#new_members_first=1

# reallocate_on_disconnect = 1|0 - reallocate position to remove
# possible "holes" when somebody has disconnected, but layout
# not changed (default 0):
#reallocate_on_disconnect=1

# True type font for printing labels (subtitles):
#font=Russo_One.ttf

# Font size in pixels (or reltive to frame height):
#fontsize=1/16

# Cut username before bracket "[" or "(" =1 or don't =0:
#cut_before_bracket=1

# Label's options (bit mask):
#  + 1 = center horizontally;
#  + 2 = center vertically;
#  + 4 = paint from right;
#  + 8 = paint from bottom;
#  +16 = transparent pad;
#  +32 = disable label.
#  +64 = subtitle mode
#label_mask = 89

# Minimum width of video position to render lable (if it will
# smaller, the rendering will skipped). Just in pixels, or
# relative to frame width, eg. 1/5 (of frame that endpoint
# will receive):
#minimum_width_for_label = 1/5

# Color for label's pad:
#label_bgcolor=115599

# Label's borders:
#border_left=5/80 // of frame width
#border_right=5/80 // of frame width
#border_top=1/200 //of frame height
#border_bottom=1/100 //of frame height
#h_pad=1/16 //of frame width
#v_pad=1/24 //of frame height

#Shadow setup for 'subtitle mode':
#dropshadow_l=1/200 //of frame width
#dropshadow_r=1/80 //of frame width
#dropshadow_t=1/150 //of frame height
#dropshadow_b=1/65 //of frame height

# Logical width and height of member's video frame, openmcu
# will scale them, so you may use everything you want;
position_width=352
position_height=288

# Mock-up width & height - this size will used to display HTML
# macket of the layout in Room Control Page:
#mockup_width=500
#mockup_height=300

/////////////////////////////////////////////
///// 1. Start with several x*x layouts /////
/////////////////////////////////////////////

[1 x 1]
position_width=704; position_height=576; (0,0)

[2 x 2]
(0,0); (352,0)
(0,288); (352,288)

[3 x 3]
position_width=234; position_height=192
(0,0)  ;(234,0);  (468,0)
(0,192);(234,192);(468,192)
(0,384);(234,384);(468,384)

[4 x 4]
position_width=176; position_height=144
(0,  0); (176,  0); (352,  0); (528,0  )
(0,144); (176,144); (352,144); (528,144)
(0,288); (176,288); (352,288); (528,288)
(0,432); (176,432); (352,432); (528,432)

[5 x 5]
position_width=140; position_height=114
(0,  0); (141,  0); (282,  0); (423,  0); (564,  0)
(0,114); (141,114); (282,114); (423,114); (564,114)
(0,228); (141,228); (282,228); (423,228); (564,228)
(0,342); (141,342); (282,342); (423,342); (564,342)
(0,456); (141,456); (282,456); (423,456); (564,456)

[6 x 6]
position_width=116; position_height=96
(4,  0); (120,  0); (236,  0); (352,  0); (468,  0); (584,  0)
(4, 96); (120, 96); (236, 96); (352, 96); (468, 96); (584, 96)
(4,192); (120,192); (236,192); (352,192); (468,192); (584,192)
(4,288); (120,288); (236,288); (352,288); (468,288); (584,288)
(4,384); (120,384); (236,384); (352,384); (468,384); (584,384)
(4,480); (120,480); (236,480); (352,480); (468,480); (584,480)

[7 x 7]
frame_width=7; frame_height=7
position_width=1; position_height=1
(0,0); (1,0); (2,0); (3,0); (4,0); (5,0); (6,0)
(0,1); (1,1); (2,1); (3,1); (4,1); (5,1); (6,1)
(0,2); (1,2); (2,2); (3,2); (4,2); (5,2); (6,2)
(0,3); (1,3); (2,3); (3,3); (4,3); (5,3); (6,3)
(0,4); (1,4); (2,4); (3,4); (4,4); (5,4); (6,4)
(0,5); (1,5); (2,5); (3,5); (4,5); (5,5); (6,5)
(0,6); (1,6); (2,6); (3,6); (4,6); (5,6); (6,6)

[8 x 8]
frame_width=8; frame_height=8
position_width=1; position_height=1
(0,0); (1,0); (2,0); (3,0); (4,0); (5,0); (6,0); (7,0)
(0,1); (1,1); (2,1); (3,1); (4,1); (5,1); (6,1); (7,1)
(0,2); (1,2); (2,2); (3,2); (4,2); (5,2); (6,2); (7,2)
(0,3); (1,3); (2,3); (3,3); (4,3); (5,3); (6,3); (7,3)
(0,4); (1,4); (2,4); (3,4); (4,4); (5,4); (6,4); (7,4)
(0,5); (1,5); (2,5); (3,5); (4,5); (5,5); (6,5); (7,5)
(0,6); (1,6); (2,6); (3,6); (4,6); (5,6); (6,6); (7,6)
(0,7); (1,7); (2,7); (3,7); (4,7); (5,7); (6,7); (7,7)

[9 x 9]
frame_width=9; frame_height=9
position_width=1; position_height=1
(0,0); (1,0); (2,0); (3,0); (4,0); (5,0); (6,0); (7,0); (8,0)
(0,1); (1,1); (2,1); (3,1); (4,1); (5,1); (6,1); (7,1); (8,1)
(0,2); (1,2); (2,2); (3,2); (4,2); (5,2); (6,2); (7,2); (8,2)
(0,3); (1,3); (2,3); (3,3); (4,3); (5,3); (6,3); (7,3); (8,3)
(0,4); (1,4); (2,4); (3,4); (4,4); (5,4); (6,4); (7,4); (8,4)
(0,5); (1,5); (2,5); (3,5); (4,5); (5,5); (6,5); (7,5); (8,5)
(0,6); (1,6); (2,6); (3,6); (4,6); (5,6); (6,6); (7,6); (8,6)
(0,7); (1,7); (2,7); (3,7); (4,7); (5,7); (6,7); (7,7); (8,7)
(0,8); (1,8); (2,8); (3,8); (4,8); (5,8); (6,8); (7,8); (8,8)

[10x10]
frame_width=10; frame_height=10
position_width=1; position_height=1
(0,0); (1,0); (2,0); (3,0); (4,0); (5,0); (6,0); (7,0); (8,0); (9,0)
(0,1); (1,1); (2,1); (3,1); (4,1); (5,1); (6,1); (7,1); (8,1); (9,1)
(0,2); (1,2); (2,2); (3,2); (4,2); (5,2); (6,2); (7,2); (8,2); (9,2)
(0,3); (1,3); (2,3); (3,3); (4,3); (5,3); (6,3); (7,3); (8,3); (9,3)
(0,4); (1,4); (2,4); (3,4); (4,4); (5,4); (6,4); (7,4); (8,4); (9,4)
(0,5); (1,5); (2,5); (3,5); (4,5); (5,5); (6,5); (7,5); (8,5); (9,5)
(0,6); (1,6); (2,6); (3,6); (4,6); (5,6); (6,6); (7,6); (8,6); (9,6)
(0,7); (1,7); (2,7); (3,7); (4,7); (5,7); (6,7); (7,7); (8,7); (9,7)
(0,8); (1,8); (2,8); (3,8); (4,8); (5,8); (6,8); (7,8); (8,8); (9,8)
(0,9); (1,9); (2,9); (3,9); (4,9); (5,9); (6,9); (7,9); (8,9); (9,9)


///////////////////////////////////////////
///// 2. Several centered x*y layouts /////
///////////////////////////////////////////

[2 x 1]
position_width=352; position_height=288; (0,144); (352,144)

[3 x 2]
position_width=234; position_height=192
(1, 96); (235, 96); (469, 96)
(1,288); (235,288); (469,288)

[4 x 3]
frame_width=8; frame_height=8
position_width=2; position_height=2
(0,1); (2,1); (4,1); (6,1)
(0,3); (2,3); (4,3); (6,3)
(0,5); (2,5); (4,5); (6,5)

[5 x 4]
frame_width=10; frame_height=10
position_width=2; position_height=2
(0,1); (2,1); (4,1); (6,1); (8,1)
(0,3); (2,3); (4,3); (6,3); (8,3)
(0,5); (2,5); (4,5); (6,5); (8,5)
(0,7); (2,7); (4,7); (6,7); (8,7)

[6 x 5]
frame_width=12; frame_height=12
position_width=2; position_height=2
(0,1); (2,1); (4,1); (6,1); (8,1); (10,1)
(0,3); (2,3); (4,3); (6,3); (8,3); (10,3)
(0,5); (2,5); (4,5); (6,5); (8,5); (10,5)
(0,7); (2,7); (4,7); (6,7); (8,7); (10,7)
(0,9); (2,9); (4,9); (6,9); (8,9); (10,9)


//////////////////////////////////////////////////
///// 3. Layouts with 1 or 2 large positions /////
//////////////////////////////////////////////////

[1 + 5]
mode_mask=2
position_width=468; position_height=384; (235,192)
position_width=234; position_height=192
(1,  0);(235,0);(469,0)
(1,192)
(1,384)

[1 + 7]
mode_mask=2
position_width=528; position_height=432; (176,144)
position_width=176; position_height=144
(0,  0); (176,  0); (352,  0); (528,  0)
(0,144)
(0,288)
(0,432)

[1 + 9]
mode_mask=2
position_width=564; position_height=460; (140,116)
position_width=140; position_height=114
(0,  1); (141,  1); (282,  1); (423,  1); (564,  1)
(0,116)
(0,231)
(0,346)
(0,461)

[1 +11]
mode_mask=2
position_width=580; position_height=480; (120, 96)
position_width=116; position_height=96
(4,  0); (120,  0); (236,  0); (352,  0); (468,  0); (584,  0)
(4, 96)
(4,192)
(4,288)
(4,384)
(4,480)

[1 +12]
mode_mask=2
position_width=352; position_height=288; (0,0)
position_width=176; position_height=144
                    (352,  0); (528,0  )
                    (352,144); (528,144)
(0,288); (176,288); (352,288); (528,288)
(0,432); (176,432); (352,432); (528,432)

[1c+12]
mode_mask=2
position_width=352; position_height=288; (176,144)
position_width=176; position_height=144
(0,  0); (176,  0); (352,  0); (528,0  )
(0,144);                       (528,144)
(0,288);                       (528,288)
(0,432); (176,432); (352,432); (528,432)

[2 + 8]
mode_mask=2
position_width=352; position_height=288
(0,144); (352,144)
position_width=176; position_height=144
(0,  0); (176,  0); (352,  0); (528,0  )
(0,432); (176,432); (352,432); (528,432)

[2 + 3]
mode_mask=2
position_width=352; position_height=288
(0,48); (352,48)
position_width=234; position_height=192
(1,336); (235,336); (469,336)

[1 +20]
mode_mask=2
frame_width=6;frame_height=6
position_width=4;position_height=4;(1,1)
position_width=1;position_height=1
(0,0);(1,0);(2,0);(3,0);(4,0);(5,0)
(0,1);                        (5,1)
(0,2);                        (5,2)
(0,3);                        (5,3)
(0,4);                        (5,4)
(0,5);(1,5);(2,5);(3,5);(4,5);(5,5)

[1c+24]
frame_width=7; frame_height=7
mode_mask=2;
position_width=5; position_height=5
(1,1)
position_width=1; position_height=1
(0,0);(1,0);(2,0);(3,0);(4,0);(5,0);(6,0)
(0,1);                              (6,1)
(0,2);                              (6,2)
(0,3);                              (6,3)
(0,4);                              (6,4)
(0,5);                              (6,5)
(0,6);(1,6);(2,6);(3,6);(4,6);(5,6);(6,6)

[1 +72]
mode_mask=2
frame_width=9; frame_height=9
position_width=3; position_height=3; (3,3)
position_width=1; position_height=1;
(0,0);(1,0);(2,0);(3,0);(4,0);(5,0);(6,0);(7,0);(8,0);
(0,1);(1,1);(2,1);(3,1);(4,1);(5,1);(6,1);(7,1);(8,1);
(0,2);(1,2);(2,2);(3,2);(4,2);(5,2);(6,2);(7,2);(8,2);
(0,3);(1,3);(2,3);                  (6,3);(7,3);(8,3);
(0,4);(1,4);(2,4);                  (6,4);(7,4);(8,4);
(0,5);(1,5);(2,5);                  (6,5);(7,5);(8,5);
(0,6);(1,6);(2,6);(3,6);(4,6);(5,6);(6,6);(7,6);(8,6);
(0,7);(1,7);(2,7);(3,7);(4,7);(5,7);(6,7);(7,7);(8,7);
(0,8);(1,8);(2,8);(3,8);(4,8);(5,8);(6,8);(7,8);(8,8);

[2 +|55|]
mode_mask=2
frame_width=22;frame_height=20;position_width=11;position_height=10;(0,0);(11,0)
position_width=2;position_height=2
( 0,10);( 2,10);( 4,10);( 6,10);( 8,10);(10,10);(12,10);(14,10);(16,10);(18,10);(20,10)
( 0,12);( 2,12);( 4,12);( 6,12);( 8,12);(10,12);(12,12);(14,12);(16,12);(18,12);(20,12)
( 0,14);( 2,14);( 4,14);( 6,14);( 8,14);(10,14);(12,14);(14,14);(16,14);(18,14);(20,14)
( 0,16);( 2,16);( 4,16);( 6,16);( 8,16);(10,16);(12,16);(14,16);(16,16);(18,16);(20,16)
( 0,18);( 2,18);( 4,18);( 6,18);( 8,18);(10,18);(12,18);(14,18);(16,18);(18,18);(20,18)

[2 +|75|]
mode_mask=2
frame_width=99;frame_height=9;position_width=33;position_height=3;(11,1);(55,1)
position_width=9;position_height=1
( 0,0);( 9,0);(18,0);(27,0);(36,0);(45,0);(54,0);(63,0);(72,0);(81,0);(90,0); position_width=11
( 0,1);                            (44,1);                            (88,1)
( 0,2);                            (44,2);                            (88,2)
( 0,3);                            (44,3);                            (88,3); position_width=9
( 0,4);( 9,4);(18,4);(27,4);(36,4);(45,4);(54,4);(63,4);(72,4);(81,4);(90,4)
( 0,5);( 9,5);(18,5);(27,5);(36,5);(45,5);(54,5);(63,5);(72,5);(81,5);(90,5)
( 0,6);( 9,6);(18,6);(27,6);(36,6);(45,6);(54,6);(63,6);(72,6);(81,6);(90,6)
( 0,7);( 9,7);(18,7);(27,7);(36,7);(45,7);(54,7);(63,7);(72,7);(81,7);(90,7)
( 0,8);( 9,8);(18,8);(27,8);(36,8);(45,8);(54,8);(63,8);(72,8);(81,8);(90,8)

[|2|+|67|]
mode_mask=2
frame_width=99;frame_height=9;position_width=33;position_height=4;(11,0);(55,0)
position_width=11;position_height=1
( 0,0);                            (44,0);                            (88,0)
( 0,1);                            (44,1);                            (88,1)
( 0,2);                            (44,2);                            (88,2)
( 0,3);                            (44,3);                            (88,3); position_width=9
( 0,4);( 9,4);(18,4);(27,4);(36,4);(45,4);(54,4);(63,4);(72,4);(81,4);(90,4)
( 0,5);( 9,5);(18,5);(27,5);(36,5);(45,5);(54,5);(63,5);(72,5);(81,5);(90,5)
( 0,6);( 9,6);(18,6);(27,6);(36,6);(45,6);(54,6);(63,6);(72,6);(81,6);(90,6)
( 0,7);( 9,7);(18,7);(27,7);(36,7);(45,7);(54,7);(63,7);(72,7);(81,7);(90,7)
( 0,8);( 9,8);(18,8);(27,8);(36,8);(45,8);(54,8);(63,8);(72,8);(81,8);(90,8)

[|2|+|56|]
mode_mask=2
frame_width=99;frame_height=8;position_width=33;position_height=4;(11,0);(55,0)
position_width=11;position_height=1
( 0,0);                            (44,0);                            (88,0)
( 0,1);                            (44,1);                            (88,1)
( 0,2);                            (44,2);                            (88,2)
( 0,3);                            (44,3);                            (88,3); position_width=9
( 0,4);( 9,4);(18,4);(27,4);(36,4);(45,4);(54,4);(63,4);(72,4);(81,4);(90,4)
( 0,5);( 9,5);(18,5);(27,5);(36,5);(45,5);(54,5);(63,5);(72,5);(81,5);(90,5)
( 0,6);( 9,6);(18,6);(27,6);(36,6);(45,6);(54,6);(63,6);(72,6);(81,6);(90,6)
( 0,7);( 9,7);(18,7);(27,7);(36,7);(45,7);(54,7);(63,7);(72,7);(81,7);(90,7)


///////////////////////////////////
///// 4. 'Picture in picture' /////
///////////////////////////////////

[2 [' ]]
label_mask=32
mode_mask=2
position_width=704; position_height=576; (0,0)
position_width=156; position_height=128; (20,16)

[2 [ ']]
label_mask=32
mode_mask=2
position_width=704; position_height=576; (0,0)
position_width=156; position_height=128; (528,16)

[2 [. ]]
label_mask=32
mode_mask=2
position_width=704; position_height=576; (0,0)
position_width=156; position_height=128; (20,432)

[2 [ .]]
label_mask=32
mode_mask=2
position_width=704; position_height=576; (0,0)
position_width=156; position_height=128; (528,432)

[3 ['']]
label_mask=32
mode_mask=2
position_width=704; position_height=576; (0,0)
position_width=156; position_height=128; (20,16); (528,16)

[3 [ :]]
label_mask=32
mode_mask=2
position_width=704; position_height=576; (0,0)
position_width=156; position_height=128; (528,16); (528,432)

[3 [..]]
label_mask=32
mode_mask=2
position_width=704; position_height=576; (0,0)
position_width=156; position_height=128; (20,432); (528,432)

[3 [: ]]
label_mask=32
mode_mask=2
position_width=704; position_height=576; (0,0)
position_width=156; position_height=128; (20,16); (20,432)

[3 ['.]]
label_mask=32
mode_mask=2
position_width=704; position_height=576; (0,0)
position_width=156; position_height=128; (20,16); (528,432)

[3 [.']]
label_mask=32
mode_mask=2
position_width=704; position_height=576; (0,0)
position_width=156; position_height=128; (20,432); (528,16);


////////////////////////////
///// 5. Other layouts /////
////////////////////////////

[|4|x3]
mode_mask=2
position_width=176; position_height=192
(  0,  0); (176,  0); (352,  0); (528,  0)
(  0,192); (176,192); (352,192); (528,192)
(  0,384); (176,384); (352,384); (528,384)

[1 +10]
mode_mask=2
position_width=352; position_height=192; (176,192)
position_width=176
(  0,  0); (176,  0); (352,  0); (528,  0)
(  0,192);                       (528,192)
(  0,384); (176,384); (352,384); (528,384)

[2 +10]
mode_mask=2
frame_width=10; frame_height=5
 position_width=5; position_height=3
  (0,1); (5,1)
 position_width=2; position_height=1
  (0,0); (2,0); (4,0); (6,0); (8,0)
  (0,4); (2,4); (4,4); (6,4); (8,4)

[1 | 1]
mode_mask=2
position_width=352; position_height=576
(0,0); (352,0)

[1w+6]
mode_mask=2
position_width=704; position_height=192
(0,384)
position_width=234
(1,  0); (235,  0); (469,  0)
(1,192); (235,192); (469,192)

[1w+8]
mode_mask=2
position_width=704; position_height=288
(0,288)
position_width=176; position_height=144
(0,  0); (176,  0); (352,  0); (528,0  )
(0,144); (176,144); (352,144); (528,144)

[1-2]
position_width=352; position_height=288
(176,0)
(0,288); (352,288)

[2-3]
frame_width=6; frame_height=6;
position_width=2; position_height=2;
(1,1); (3,1); (0,3); (2,3); (4,3)

[2-3-2]
position_width=234; position_height=192
     (118,  0) ; (352,  0)
(  1,192) ; (235,192) ; (469,192)
     (118,384) ; (352,384)

[3-3-2]
position_width=234; position_height=192
(1,  0);(235,  0);(469,  0)
(1,192);(235,192);(469,192)
   (118,384);(352,384)

[3-4-3]
frame_width=8; frame_height=8; position_width=2; position_height=2
  (1,1);(3,1);(5,1)
(0,3);(2,3);(4,3);(6,3)
  (1,5);(3,5);(5,5)

[4-3-4]
frame_width=8; frame_height=8; position_width=2; position_height=2
(0,1);(2,1);(4,1);(6,1)
  (1,3);(3,3);(5,3)
(0,5);(2,5);(4,5);(6,5)

[2-4-4-3]
frame_width=8; frame_height=8; position_width=2; position_height=2
      (2,0);(4,0)
(0,2);(2,2);(4,2);(6,2)
(0,4);(2,4);(4,4);(6,4)
   (1,6);(3,6);(5,6)

[3-4-4-3]
frame_width=8; frame_height=8; position_width=2; position_height=2
   (1,0);(3,0);(5,0)
(0,2);(2,2);(4,2);(6,2)
(0,4);(2,4);(4,4);(6,4)
   (1,6);(3,6);(5,6)

[4-4-4-3]
frame_width=8; frame_height=8; position_width=2; position_height=2
(0,0);(2,0);(4,0);(6,0)
(0,2);(2,2);(4,2);(6,2)
(0,4);(2,4);(4,4);(6,4)
   (1,6);(3,6);(5,6)


/////////////////////////////////////////
///// 6. Sent by openmcu.ru members /////
/////////////////////////////////////////

[1 +27] // By vol4enok
mode_mask=2
frame_width=6;frame_height=6
position_width=3;position_height=3;(0,0)
position_width=1;position_height=1
                  (3,0);(4,0);(5,0)
                  (3,1);(4,1);(5,1)
                  (3,2);(4,2);(5,2)
(0,3);(1,3);(2,3);(3,3);(4,3);(5,3)
(0,4);(1,4);(2,4);(3,4);(4,4);(5,4)
(0,5);(1,5);(2,5);(3,5);(4,5);(5,5)

[1w+2] // By vol4enok
mode_mask=2
frame_width=2;frame_height=2
position_width=2;position_height=1;(0,0)
position_width=1;position_height=1;
(0,1);(1,1)

[3 + 2 + 6] // By vol4enok
mode_mask=2
frame_width=6;frame_height=6
position_width=3;position_height=3;(0,2);(3,2)
position_width=2;position_height=2;(0,0);(2,0);(4,0)
position_width=1;position_height=1
(0,5);(1,5);(2,5);(3,5);(4,5);(5,5)

[2 + 18] // By vol4enok
mode_mask=2
frame_width=6;frame_height=6
position_width=3;position_height=3;(0,0);(3,0)
position_width=1;position_height=1
(0,3);(1,3);(2,3);(3,3);(4,3);(5,3)
(0,4);(1,4);(2,4);(3,4);(4,4);(5,4)
(0,5);(1,5);(2,5);(3,5);(4,5);(5,5)

[6 + 2 + 12] // By vol4enok
mode_mask=2
frame_width=6;frame_height=6
position_width=3;position_height=3;(0,1);(3,1)
position_width=1;position_height=1
(0,0);(1,0);(2,0);(3,0);(4,0);(5,0)
position_width=1;position_height=1
(0,4);(1,4);(2,4);(3,4);(4,4);(5,4)
(0,5);(1,5);(2,5);(3,5);(4,5);(5,5)

[1c+40] // by palexa
mode_mask=2
//Количество позиций по ширине и высоте
frame_width=7;frame_height=7
//Центральная позиция 3х3 и её положение
position_width=3; position_height=3; (2,2)
//Остальные позиции 1х1 и их положение
position_width=1; position_height=1
(0,0);(1,0);(2,0);(3,0);(4,0);(5,0);(6,0)
(0,1);(1,1);(2,1);(3,1);(4,1);(5,1);(6,1)
(0,2);(1,2);                  (5,2);(6,2)
(0,3);(1,3);                  (5,3);(6,3)
(0,4);(1,4);                  (5,4);(6,4)
(0,5);(1,5);(2,5);(3,5);(4,5);(5,5);(6,5)
(0,6);(1,6);(2,6);(3,6);(4,6);(5,6);(6,6)

[2v + 12_]
mode_mask=2
frame_width=12; frame_height=6
position_width=6; position_height=3
(0,0); (6,0)
position_width=2; position_height=1
(0,3); (2,3); (4,3); (6,3); (8,3); (10,3)
(0,4); (2,4); (4,4); (6,4); (8,4); (10,4)

[2v + 8]
mode_mask=2
frame_width=8; frame_height=4
position_width=4; position_height=2
(0,0); (4,0)
position_width=2; position_height=1
(0,2); (2,2); (4,2); (6,2)
(0,3); (2,3); (4,3); (6,3)

[2v + 32]
mode_mask=2
frame_width=16; frame_height=8
position_width=8; position_height=4
(0,0); (8,0)
position_width=2; position_height=1
(0,4); (2,4); (4,4); (6,4); (8,4); (10,4); (12,4); (14,4)
(0,5); (2,5); (4,5); (6,5); (8,5); (10,5); (12,5); (14,5)
(0,6); (2,6); (4,6); (6,6); (8,6); (10,6); (12,6); (14,6)
(0,7); (2,7); (4,7); (6,7); (8,7); (10,7); (12,7); (14,7)

[2v + 21]
mode_mask=2
frame_width=14; frame_height=7
position_width=7; position_height=4
(0,0); (7,0)
position_width=2; position_height=1
(0,4); (2,4); (4,4); (6,4); (8,4); (10,4); (12,4)
(0,5); (2,5); (4,5); (6,5); (8,5); (10,5); (12,5)
(0,6); (2,6); (4,6); (6,6); (8,6); (10,6); (12,6)

[2v + 10]
mode_mask=2
frame_width=10; frame_height=5
position_width=5; position_height=3
(0,0); (5,0)
position_width=2; position_height=1
(0,3); (2,3); (4,3); (6,3); (8,3)
(0,4); (2,4); (4,4); (6,4); (8,4)

[2v + 12]
mode_mask=2
frame_width=12; frame_height=6
position_width=6; position_height=4
(0,0); (6,0)
position_width=2; position_height=1
(0,4); (2,4); (4,4); (6,4); (8,4); (10,4)
(0,5); (2,5); (4,5); (6,5); (8,5); (10,5)
